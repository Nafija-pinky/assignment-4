name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure the full history for SonarCloud analysis

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Generate required .env file
      - name: Generate required .env file
        run: |
          echo DEBUG=True >> .env
          echo FLASK_DEBUG=1 >> .env
          echo FLASK_APP=run.py >> .env

      # Build Docker containers
      - name: Build Docker containers
        run: docker-compose build

      # Run unit tests
      - name: Run unit tests
        run: docker-compose up unit-test-container

      # Run pylint
      - name: Run pylint
        run: docker-compose run pylint-container pylint **/*.py

      # Set up Java (required for SonarCloud)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Cache SonarCloud dependencies
      - name: Cache SonarCloud dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      # Install dependencies for SonarCloud analysis
      - name: Install dependencies for analysis
        run: |
          pip install pylint pytest pytest-cov

      # Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=ahsanulhabib93_assignment-04
            -Dsonar.organization=ahsanulhabib93
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Set up Git config
      - name: Set up Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Fetch all branches
      - name: Fetch all branches
        run: |
          git fetch --all

      # Checkout dev branch and update
      - name: Checkout and update dev branch
        run: |
          git checkout dev
          git pull origin dev

      # Checkout master branch and update
      - name: Checkout and update master branch
        run: |
          git checkout main
          git pull origin main

      # Merge master into dev branch
      - name: Merge main into dev branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout dev
          git merge main --no-ff -m "Merging main into dev"
          git push origin dev
